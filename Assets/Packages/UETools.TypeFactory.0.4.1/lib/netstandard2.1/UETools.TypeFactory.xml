<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UETools.TypeFactory</name>
    </assembly>
    <members>
        <member name="T:UETools.TypeFactory.Factory">
            <summary>
            Represents class for generating delegates instantiating passed type.
            </summary>
        </member>
        <member name="M:UETools.TypeFactory.Factory.CreateInstanceFunction``1(System.Type)">
            <summary>
            Creates a delegate instantiating <paramref name="actualType"/>, making necessary checks to be sure it is of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The return type of compiled lambda.</typeparam>
            <param name="actualType"><see cref="T:System.Type"/> to instantiate.</param>
            <returns>Delegate instantiating <paramref name="actualType"/>.</returns>
            <remarks>Function makes necessary checks to ensure <paramref name="actualType"/> is actually instantiable</remarks>
            <exception cref="T:System.TypeInitializationException">Thrown if type is unsuitable for construction as <typeparamref name="T"/>. <see cref="P:System.Exception.InnerException"/> for message about error.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="actualType"/> is null</exception>
        </member>
        <member name="T:UETools.TypeFactory.Factory`1">
            <summary>
            Creates instances of type <typeparamref name="T"/>.
            </summary>
            <typeparam name="T">The type with a parameterless constructor.</typeparam>
        </member>
        <member name="M:UETools.TypeFactory.Factory`1.CreateInstance">
            <summary>
            Creates an instance of type <typeparamref name="T"/> by calling it's parameterless constructor.
            </summary>
            <returns>An instance of type <typeparamref name="T"/>.</returns>
        </member>
    </members>
</doc>
